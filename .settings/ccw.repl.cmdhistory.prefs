#Fri Aug 10 14:18:48 EDT 2012
cmdhistory=[";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(push 'x '(z))" "(doc push)" "(doc cons)" "(cons 'x '(z))" "(doc nth)" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" "(concat '(1 2 3) '(4 5 6))" "(doc nth)" "(instance Number 1)" "(instance clojure.core.Number 1)" "(.getName Number)" "(instance java.lang.Number 1)" "(instance?  java.lang.Number 1)" "(instance?  java.lang.Number {})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" "(def board (empty-board))" "board" "(show-board board)" "(add-new-group board\\n                      (coord-to-index 1 1)\\n                      \:black)" "(show-board board)" "(def board (add-new-group board\\n                      (coord-to-index 1 1)\\n                      \:black))" "(show-board board)" "(def board (add-new-group board\\n                      (coord-to-index 1 2)\\n                      \:black))" "(show-board board)" "(def board (union-groups board\\n                     (coord-to-index 1 1)\\n                     (coord-to-index 1 2)))" "(focus-on-group board (coord-to-index 1 1) \:group1)" "(rerank-merge board 1 (coord-to-index 1 1) (coord-to-index 1 1))" "(show-board board)" "(rerank-merge board 1 (coord-to-index 1 1) (coord-to-index 1 1))" "board" "(rerank-merge board 1 (coord-to-index 1 1) (coord-to-index 1 1))" "board" "(rerank-merge board 1 (coord-to-index 1 1) (coord-to-index 1 1))" "(rerank-merge board 1 (coord-to-index 1 1) (coord-to-index 1 2))" "(def board (focus-on-group board (coord-to-index 1 1) \:group1))" "board" "(\:group1 board)" "board" "(union-groups board 11 21)" "(let [board (focus-on-group board 11 \:group1)\\n        board (focus-on-group board 21 \:group2)\\n        group1 (\:group1 board)\\n        group2 (\:group2 board)]\\n  (list group1 group2))" "(let [points (\:ponits board)\\n            r1 (get-in points [11 \:rank])\\n            r2 (get-in points [21 \:rank])]\\n  (list r1 r2))" "(\:point board)" "(\:points board)" "(let [points (\:ponits board)\\n            r1 (get-in points [11 \:rank])\\n            r2 (get-in points [21 \:rank])]\\n  (list r1 r2))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(doc get)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "board" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" "(print-str \#{\\"test\\" \\"x\\"})" "(str \#{\\"test\\" \\"x\\"})" "(apply str \#{\\"test\\" \\"x\\"})" "(apply print-str \#{\\"test\\" \\"x\\"})" "(doc quit)" "((partial \#(/ %1 %2) 0) 1)" "((partial (fn [x y] (/ x y)) 0) 1)" "(doc assoc)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" ";; Switching to jkb.go.play.command namespace" "(clojure.core/in-ns 'jkb.go.play.command)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" "(doc name)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(def game-state {})" "(def game-state (version game-state))" "game-state" "(known_command game-state \\"version\\")" "(known_command game-state \\"versionz\\")" "(list_commands game-state)" "(interspears [1 2 3] 3)" "(interleave [1 2 3] 3)" "(interpose 1 [2 3 4])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" "(list_commands game-state)" "(println (\:result (list_commands game-state)))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" ";; Switching to jkb.go.play.command namespace" "(clojure.core/in-ns 'jkb.go.play.command)" "(println (\:result (list_commands game-state)))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/util.clj" "(\= \\"V\\" \\\\V)" "(\= (char \\"V\\") \\\\V)" "(\= (nth 1 \\"V\\") \\\\V)" "(doc nth)" "(\= (nth \\"V\\" 1) \\\\V)" "(\= (nth \\"V\\" 0        ) \\\\V)" ";; Switching to jkb.go.util namespace" "(clojure.core/in-ns 'jkb.go.util)" "(rest \\"abc\\")" "(read-string (rest \\"a12\\"))" "(read-string (str (rest \\"a12\\")))" "(str (rest \\"a12\\"))" "(print-str (rest \\"a12\\"))" "(apply str (rest \\"a12\\"))" "(read-string (apply str (rest \\"a12\\")))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/util.clj" "(parse-move {} \\"A2\\")" "(parse-move {} \\"A1\\")" "(parse-move {} \\"C12\\")" "(doc assoc)" "(defn test [& x] (println x))" "(defn testx [& x] (println x))" "(testx)" "(testx 1)" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" "(doc filter)" "(doc count)" "(doc get)" "(doc nth)" "(doc reduce)" "(dec 2)" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" "(doc reduce)" "(doc mapf)" "(doc map)" "(doc update)" "(doc update-in)" "(let [(x y) '(1 2)]\\n  x)" "(let [[x y] [1 2]]\\n  x)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/display/showboard.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/util.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/display/showboard.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" "(def x's 3)" "x's" "(doc reduce)" "(doc assoc)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(def game-state {})" "(def game-state (boardsize game-state 9))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/command.clj" ";; Switching to jkb.go.play.command namespace" "(clojure.core/in-ns 'jkb.go.play.command)" "(def game-state (boardsize game-state 9))" "(def game-state {})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" "(def game-state {})" "(def game-state (boardsize game-state 9))" "(def game-state (komi game-state 5))" "(def game-state (clear_board game-state))" "(show-board (\:board game-state))" "(doc show-board)" "(show-board (\:board-size game-state) (\:board game-state))" "(def game-state (play game-state \\"A1\\"))" "(make-move game-state \:black 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" "(make-move game-state \:black 11)" "(neighbor-indexes 9 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(neighbor-indexes 9 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(neighbor-indexes 9 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Switching to jkb.go.core namespace" "(clojure.core/in-ns 'jkb.go.core)" "(neighbor-indexes 9 11)" "(neighbor-indexes 9 (coord-to-index 9 9 9))" "(coord-to-index 9 9 9)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" "(neighbor-indexes 9 (coord-to-index 9 9 9))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(def game-state (clear_board game-state))" "(def game-state (clear_board {}))" "(make-move game-state \:black 11)" "(merge-groups (\:board game-state) 9 11)" "(neighbor-indexes 9 11)" "(merge-groups (\:board game-state) 9 11)" "(partial (union-groups (\:board game-state) 11))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" "(merge-groups (\:board game-state) 9 11)" "(\:board game-state)" "(merge-groups (\:board game-state) 9 11)" "(neighbor-indexes 9 11)" "(union-groups (\:board game-state) 11 10 12 21 1)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" "(union-groups (\:board game-state) 11 10 12 21 1)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" "(union-groups (\:board game-state) 11 10 12 21 1)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" "(union-groups (\:board game-state) 11 10 12 21 1)" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" "(union-groups (\:board game-state) 11 10 12 21 1)" "(union-groups (empty-board 9) 11 10 12 21 1)" "(union-2-groups (empty-board 9) 11 12)" "(focus-on-group (empty-board 9) 12 \:group2)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" "(focus-on-group (empty-board 9) 12 \:group2)" "(union-2-groups (empty-board 9) 11 12)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(a-test)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(doc deftest)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(a-test)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/core.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(board-opps)" "(is (\= 1 1))" "(testing \\"abc\\"\\n         (is true))" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(board-opps)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(read-index game-state \\"B2\\")" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(doc play)" "(play game-state \:black \\"A1\\")" "(\:board game-state)" "(add-new-group (\:board game-state) board-size 11 \:black)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "game-state" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(get-in game-state [\:board \:points 11])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(\:board game-state)" "board-size" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(def maybe-board (\:board game-state))" "(def maybe-board (add-new-group maybe-board board-size index color))" "(def maybe-board (map-neighbor-libs dec maybe-board board-size index))" "(def maybe-board (merge-groups maybe-board board-size index))" "(show-board 9 (\:board maybe-board))" "(show-board 9 maybe-board)" "(def maybe-board (merge-groups maybe-board board-size index))" "index" "(neighbor-indexes board-size index)" "(def maybe-board (merge-groups maybe-board board-size index))" "(union-groups maybe-board 11 10 12 21 1)" "(union-groups maybe-board 11 10)" "(neighbor-indexes board-size index)" "(first (neighbor-indexes board-size index))" "(rest (neighbor-indexes board-size index))" "(rest [10])" "(rest [])" "(rest '())" "(union-groups maybe-board 11 10 12 21 1)" "(union-groups maybe-board 11 12 21 1)" "(union-groups maybe-board 11 12)" "(union-groups maybe-board 11 21)" "(union-groups maybe-board 11 1)" "(not (rest [10]))" "(not (rest []))" "(not [])" "(not [10])" "(not '())" "(empty? (rest [10]))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(union-groups maybe-board 11 10 12 21 1)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" "(union-groups maybe-board 11 10 12 21 1)" "(union-groups maybe-board 11 10)" "(union-groups maybe-board 11 10 12 21 1)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" "(union-groups maybe-board 11 10 12 21 1)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(union-groups maybe-board 11 10 12 21 1)" "board-size" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(def board-size (\:board-size game-state 9))" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(def maybe-board (add-new-group maybe-board board-size index color))" "(def color \:black)\\n(def index 11)\\n(def board-size (\:board-size game-state 9))" "(def maybe-board (add-new-group maybe-board board-size index color))" "maybe-board" "(def maybe-board (\:board game-state))" "(def maybe-board (add-new-group maybe-board board-size index color))" "(def maybe-board (map-neighbor-libs dec maybe-board board-size index))" "(def maybe-board (merge-groups maybe-board board-size index))" "(union-2-groups maybe-board 11 10)" "(union-groups maybe-board 11 10 21)" "(empty? (rest [10]))" "(empty? (rest '(10)))" "(empty? (rest '(10 12)))" "(defn union-groups\\n  \\"mawage, mawage is what bwings us togethaw today\\"\\n  [board index1 index2 & indexes]\\n  (if (empty? indexes)\\n    (union-2-groups board index1 index2)\\n    (union-groups (union-2-groups board index1 index2) \\n                  index1 \\n                  (first indexes) \\n                  (rest indexes))))" "(defn union-groups2\\n  \\"mawage, mawage is what bwings us togethaw today\\"\\n  [board index1 index2 & indexes]\\n  (if (empty? indexes)\\n    (union-2-groups board index1 index2)\\n    (union-groups2 (union-2-groups board index1 index2) \\n                  index1 \\n                  (first indexes) \\n                  (rest indexes))))" "(union-groups2 maybe-board 11 10 21)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "index" "board-size" "maybe-board" "(union-groups2 maybe-board 11 10 21)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Switching to jkb.go.data.board namespace" "(clojure.core/in-ns 'jkb.go.data.board)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(doc nth)" "(\:test {})" "(doc get-in)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(focus-on-group maybe-board 11)" "maybe-board" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "maybe-board" "(focus-on-group maybe-board 11)" "(get-in maybe-board [\:points (\:focus maybe-board) \:color])" "(get-in maybe-board [\:points (\:focus (focus-on-group maybe-board 11)) \:color])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(nth board (\:focus (focus-on-group maybe-board 12)))" "(nth maybe-board (\:focus (focus-on-group maybe-board 12)))" "(\:focus (focus-on-group maybe-board 12))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" "(\:focus (focus-on-group maybe-board 12))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(nth maybe-board (\:focus (focus-on-group maybe-board test-index)))" "(nth maybe-board (\:focus (focus-on-group maybe-board 10)))" "(focus-on-group maybe-board 10)" "(\:focus (focus-on-group maybe-board 10))" "(nth maybe-board (\:focus (focus-on-group maybe-board 10)))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "maybe-board" "(don't-do-it maybe-board index)" "index" "(don't-do-it maybe-board index)" "(get-in maybe-board [\:points (\:focus (focus-on-group maybe-board index)) \:libs])" "(> 0 2)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" "(def game-state (play game-state \:white \\"A2\\"))" "(show-board board-size (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "game-state" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" "(\:board game-state)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(get-in game-state [\:board \:points (read-index game-state \\"J9\\") \:libs])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" "(get-in game-state [\:board \:points 11])" "(show-board board-size (\:board game-state))" "(def game-state {})\\n(def game-state (boardsize game-state board-size))\\n(def game-state (clear_board game-state))" "(show-board board-size (\:board game-state))" "\\n(def game-state (play game-state \:white \\"A2\\"))" "\\n(def game-state (play game-state \:white \\"B1\\"))" "(show-board board-size (\:board game-state))" "\\n(def game-state (play game-state \:black \\"A1\\"))" "(show-board board-size (\:board game-state))" "(def game-state {})\\n(def game-state (boardsize game-state board-size))\\n(def game-state (clear_board game-state))" "(show-board board-size (\:board game-state))" "(def game-state (play game-state \:white \\"A2\\"))\\n(def game-state (play game-state \:white \\"B1\\"))" "(show-board board-size (\:board game-state))" "(get-in game-state [\:board \:points (read-index game-state \\"B1\\") \:libs])" "(count-libs (\:board game-state) board-size 11)" "(show-board board-size (\:board game-state))" "(count-libs (\:board game-state) board-size 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" "(count-libs (\:board game-state) board-size 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(def game-state {})\\n(def game-state (boardsize game-state board-size))\\n(def game-state (clear_board game-state))" "(def game-state (play game-state \:white \\"A2\\"))\\n(def game-state (play game-state \:white \\"B1\\"))" "(get-in game-state [\:board \:points (read-index game-state \\"B1\\") \:libs])" "(show-board board-size (\:board game-state))" "(def game-state (play game-state \:white \\"A2\\"))\\n(def game-state (play game-state \:white \\"B1\\"))" "(show-board board-size (\:board game-state))" "(\:board game-state)" "(add-new-group (\:board game-state) \\n                                      (\:board-size game-state) \\n                                      11 \\n                                      \:black)" "(count-libs (\:board game-state) board-size 11)" "(filter \#(true) [1 2 3])" "(filter \#(\= %1 2) [1 2 3])" "(\#(and (not\= %1 \:empty) (not\= %1 \:edge)) \:empty)" "(\#(and (not\= %1 \:empty) (not\= %1 \:edge)) \:edge)" "(\#(and (not\= %1 \:empty) (not\= %1 \:edge)) {})" "(count-libs (\:board game-state) board-size 11)" "(\:board game-state)" "(count-libs (\:board game-state) board-size 11)" "(get-neighbor-points (\:board game-state) board-size index)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" "(count-libs (\:board game-state) board-size 11)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(if 1 true false)" "(doc get-in)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" "(get-in game-state [\:board \:ko])" "(if nil true false)" "(if -1 true false)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Switching to jkb.go namespace" "(clojure.core/in-ns 'jkb.go)" "(show-board board-size (\:board game-state))" "(occupied? game-state 11)" "(get-in game-state [\:board \:points 1])" "(get-in game-state [\:board \:points 11])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" "(show-board board-size (\:board game-state))" "(get-in game-state [\:board \:points 11])" "(get-in game-state [\:board \:points 22])" "(def game-state (play game-state \:black \\"A3\\"))" "(show-board board-size (\:board game-state))" "(def game-state (play game-state \:black \\"A2\\"))" "(get-in game-state [\:board \:points (\:focus (focus-on-group (\:board game-state) 11))])" "(show-board board-size (\:board game-state))" "(def game-state (play game-state \:black \\"A2\\"))" "(show-board board-size (\:board game-state))" "(\:error game-state)" "(def game-state (play game-state \:black \\"B1\\"))" "(\:error game-state)" "(def game-state (play game-state \:black \\"A2\\"))" "(show-board board-size (\:board game-state))" "(get-in game-state [\:board \:points (\:focus (focus-on-group (\:board game-state) 11))])" "(def game-state (play game-state \:white \\"A4\\"))" "(def game-state (play game-state \:white \\"B3\\"))" "(def game-state (play game-state \:white \\"C2\\"))" "(show-board board-size (\:board game-state))" "(def game-state (play game-state \:white \\"D1\\"))" "(show-board board-size (\:board game-state))" "(get-in game-state [\:board \:points (\:focus (focus-on-group (\:board game-state) 41))])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Switching to jkb.go.ai.monte-carlo namespace" "(clojure.core/in-ns 'jkb.go.ai.monte-carlo)" "(domonad sequence-m\\n         [a (range 5)\\n          b (range a)]\\n         (* a b))" "(doc domonad)" "(use 'clojure.contrib.monads)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/project.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" ";; Switching to jkb.go.play.moving-test namespace" "(clojure.core/in-ns 'jkb.go.play.moving-test)" "(doc vec)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" "(doc dotimes)" "(doc show-baord)" "(doc show-board)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" "(doc subvec)" "(random-nth {1 2 2 5 3 6})" "(rand-nth {1 2 2 5 3 6})" "(doc into)" "(doc subvec)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" "(doc shuffle)" "(shuffle [1 2 3])" "(doc reduce)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" "(doc map-indexed)" "(doc zip)" "(doc remove-nth)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/util.clj" "(doc repeat)" "(instance? 1)" "(doc instance?)" "(\:parent 1 2)" "(defn testxx\\n  [a [b c]]\\n  (+ a b c))" "(testxx 1 [2 3])" "(map-indexed vector [2 3 4])" "(doc flatten)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(\:test {\:test 1} (println 1))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "game-state" "(color-point (get-in game-state [\:board \:points]) 11)" "(color-point (get-in game-state [\:board \:points]) 12)" "(color-point (get-in game-state [\:board \:points]) \:edge)" "(color-point (get-in game-state [\:board \:points]) \:empty)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(color-points (get-in  game-state [\:board \:points]))" "game-state" "(color-points (get-in  game-state [\:board \:points]))" "(color-point (get-in  game-state [\:board \:points]) \:edge)" "(color-point (get-in  game-state [\:board \:points]) \:empty)" "(color-point (get-in  game-state [\:board \:points]) 11)" "(color-point (get-in  game-state [\:board \:points]) {\:color \:black})" "board-state" "game-state" "(color-point (get-in  game-state [\:board \:points]) {\:color \:black})" "(color-points (get-in  game-state [\:board \:points]))" "(get-in  game-state [\:board \:points])" "(color-points (get-in  game-state [\:board \:points]))" "(color-point (get-in  game-state [\:board \:points])  {\:parent 11, \:color \:black, \:libs 2, \:rank 0, \:members (11)})" "(color-point (get-in  game-state [\:board \:points])  \\n             {\:parent 11, \:color \:black, \:libs 2, \:rank 0, \:members '(11)})" "(color-points (get-in  game-state [\:board \:points]))" "(get-in  game-state [\:board \:points])" "(color-points (get-in  game-state [\:board \:points]))" "(get-in  game-state [\:board \:points])" "(color-points (get-in  game-state [\:board \:points]))" "(get-in  game-state [\:board \:points])" "(map \#(color-point (get-in  game-state [\:board \:points]) %1) (get-in  game-state [\:board \:points]))" "(def points (color-points (get-in  game-state [\:board \:points])))" "points" "(fill-territory points (\:board-size game-state))" "(map-indexed \#(fill-point points board-size %1 %2 -1) points)" "(fill-point points board-size 0 (first points) -1)" "(fill-point points board-size 0 (nth 1 points) -1)" "(doc nth)" "(fill-point points board-size 0 (nth points 1) -1)" "(fill-point points board-size 0 (nth points 2) -1)" "(fill-point points board-size 0 (nth points 11) -1)" "(fill-point points board-size 0 (nth points 12) -1)" "points" "(nth points 12)" "(fill-point points board-size 0 (nth points 12) -1)" "(fill-point points board-size 12 (nth points 12) -1)" "(fill-point points board-size 11 (nth points 11) -1)" "(fill-point points board-size 12 (nth points 12) -1)" "(neighbor-indexes 9 12)" "(filter \#(not\= %1 -1) ; skip index of visited\\n                   (neighbor-indexes 9 12))" "(map \#(fill-point points 9 %1 (nth points %1) '(11 13 22 2)))" "(map \#(fill-point points 9 %1 (nth points %1)) '(11 13 22 2))" "(map \#(fill-point points 9 %1 (nth points %1) 12) '(11 13 22 2))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(doc difference)" "(doc contains?)" "(filter true [1 2])" "(filter \#(true) [1 2])" "(filter \#(\= 1 %1) [1 2])" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(map \#(fill-point points 9 %1 (nth points %1) 12) '(11 13 22 2))" "(map \#(fill-point points 9 %1 (nth points %1) \#{12}) '(11 13 22 2))" "(fill-point points 9 11 (nth points 11) \#{})" "(fill-point points 9 12 (nth points 12) \#{})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(fill-point points 9 12 (nth points 12) \#{})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(fill-point points 9 12 (nth points 12) \#{})" "(fill-point points 9 11 (nth points 11) \#{})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" "(println \\"test\\")" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Switching to jkb.go.play.eval namespace" "(clojure.core/in-ns 'jkb.go.play.eval)" "(doc range)" "(doc length)" "(doc len)" "(doc count)" "(first \#{1})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Switching to jkb.go.play.eval namespace" "(clojure.core/in-ns 'jkb.go.play.eval)" "(second [1 2])" "(doc empty)" "(doc empty?)" "(doc not-nil)" "(filter \#(%1) [1 nil 2])" "(filter \#(not\= %1 nil) [1 nil 2])" "(doc conj)" "(doc union)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/util.clj" "(use 'clojure.set)" "(doc union)" "(doc disjoint)" "(doc difference)" "(doc nth)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Switching to jkb.go.play.eval namespace" "(clojure.core/in-ns 'jkb.go.play.eval)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(doc assoc)" "(doc setCell)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "e" "*e" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "*e" "(.printStackTrace *e)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(nth [1 2] 0)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(def points (color-points (get-in game-state [\:board \:points])))" "(def board-size 9)\\n(def game-state {})\\n(def game-state (boardsize game-state board-size))\\n(def game-state (clear_board game-state))\\n\\n(def game-state (play game-state \:black \\"A1\\"))" "(def points (color-points (get-in game-state [\:board \:points])))" "(def points (fill-territory points (\:board-size game-state)))" "*e" "(def points (color-points (get-in game-state [\:board \:points])))" "(def points (fill-territory points (\:board-size game-state)))" "points" "(\:board-size game-state)" "(def get-index-set (fn [points color]\\n                        (set (filter \#(not\= %1 nil) \\n                                     (map-indexed \#(if (\= %2 color) %1 nil) \\n                                                  points)))))" "(get-index-set points \:black)" "(get-index-set points \:white)" "(wave points \\n          board-size\\n          (get-index-set points \:black) \#{}\\n          (get-index-set points \:white) \#{})" "(def black-wave-set (get-index-set points \:black))" "(def white-wave-set (get-index-set points \:white))" "(def last-black-wave-set \#{})" "(def last-white-wave-set \#{})" "(and (empty? black-wave-set) (empty? white-wave-set))" "(def new-black-set (get-new-set black-wave-set last-black-wave-set board-size))" "(def new-black-set (break-wave points new-black-set))" "new-black-set" "(def new-white-set (get-new-set white-wave-set last-white-wave-set board-size))" "new-white-set" "(def new-white-set (break-wave points new-white-set))" "(def new-points (wash-board points new-black-set \:black))" "(reduce points \\n          \#(assoc %1 %2 (wash-point (nth %1 %2) \:black)) \\n          new-black-set)" "(wash-point (nth points 11 %2) \:black)" "(wash-point (nth points 11) \:black)" "(reduce points \\n          \#(assoc %1 %2 (wash-point (nth %1 %2) \:black)) \\n          new-black-set)" "new-black-set" "(assoc points 12 (wash-point (nth points 12) \:black))" "points" "(assoc points 12 (wash-point (nth points 12) \:black))" "(nth points 12)" "(wash-point (nth points 12) \:black)" "(assoc points 12 \:black-claim)" "(doc assoc)" "(assoc points 12 \:black-claim)" "points" "(assoc points 12 \:black-claim)" "(assoc (vec points) 12 \:black-claim)" "(assoc points 12 (wash-point (nth points 12) \:black))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(assoc (vec points) 12 (wash-point (nth points 12) \:black))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" "(assoc (vec points) 12 (wash-point (nth points 12) \:black))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" "(get-new-set \#{11} \#{} board-size)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" "(get-new-set \#{11} \#{} board-size)" "(get-new-set \#{1} \#{} board-size)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" "(get-new-set \#{1} \#{} board-size)" "(get-new-set \#{11} \#{} board-size)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(break-wave points \#{12 21})" "(break-wave points \#{12 21 11})" "points" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" "(break-wave points \#{12 21 11})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" "(wash-board points \#{21 12} \:black)" "points" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(wash-board points \#{21 12} \:black)" "points" "(wash-board points \#{21 12} \:black)" "(vec points)" "(wash-board points \#{21 12} \:black)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Switching to jkb.go.play.eval-test namespace" "(clojure.core/in-ns 'jkb.go.play.eval-test)" "(wash-board points \#{21 12} \:black)" "(reduce (vec points) \\n          (fn [p index] \\n            (assoc p index (wash-point (nth p index) color))) \\n          \#{12 21})" "(reduce (vec points) \\n          (fn [p index] \\n            (assoc p index (wash-point (nth p index) \:black))) \\n          \#{12 21})" "(assoc (vec points) 12 (wash-point (nth (vec points) 12) \:black))" "(reduce (vec points) \\n          (fn [p index] \\n            (assoc p index (wash-point (nth p index) \:black))) \\n          \#{12 21})" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) color))) \\n            wave-set))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n    vpoints)" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(nth (vec pont) 21)" "(nth (vec points) 21)" "(nth (vec points) 12)" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "points" "(def ponits (vec points))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(doc reduce)" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(assoc points 12 (wash-point (nth points 12) \:black))" "points" "(def points (vec points))" "points" "(assoc points 12 (wash-point (nth points 12) \:black))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(assoc points 12 (wash-point (nth points 12) \:black))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(assoc points 21 (wash-point (nth points 21) \:black))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(assoc points 21 (wash-point (nth points 21) \:black))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(assoc points 21 (wash-point (nth points 21) \:black))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              (assoc p index (wash-point (nth p index) \:black))) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] \\n              index) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            (fn [p index] index) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            \#([%1 %2]) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n  vpoints)" "(let [vpoints (vec points)]\\n    (reduce vpoints \\n            \#([%1 %2]) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n    (reduce 1\\n            \#([%1 %2]) \\n            \#{12 21}))" "(let [vpoints (vec points)]\\n    (reduce 1\\n            \#(%2) \\n            \#{12 21}))" "*e" "(reduce 1 \#(+ %1 %2) \#{2 3})" "(reduce 1 \#(+ %1 %2) [2 3])" "(doc reduce)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/core_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/moving_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/play/eval_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Switching to jkb.go.ai.monte-carlo-test namespace" "(clojure.core/in-ns 'jkb.go.ai.monte-carlo-test)" "empties" "(shuffle empties)" "(reduce (fn [gs move]\\n              (make-move gs (other-player (\:last-play gs \:black)) move))\\n          game-state\\n          (shuffle empties))" "(show-board board-size \\n            (reduce (fn [gs move]\\n                      (make-move gs (other-player (\:last-play gs \:black)) move))\\n                    game-state\\n                    (shuffle empties)))" "empties" "game-state" "(show-board board-size \\n            (reduce (fn [gs move]\\n                      (make-move gs (other-player (\:last-play gs \:black)) move))\\n                    game-state\\n                    (shuffle empties)))" "(reduce (fn [gs move]\\n                      (make-move gs (other-player (\:last-play gs \:black)) move))\\n                    game-state\\n                    (shuffle empties))" "rnd-game-state" "(show-board 9 rnd-game-state)" "(\:board rnd-game-state)" "(\:points (\:board rnd-game-state))" "(show-board 9 rnd-game-state)" "(show-board 9 nil)" "rnd-game-state" "(show-board 9 rnd-game-state)" "(show-board 9 game-state)" "(show-board 9 (\:board rnd-game-state))" "(show-board board-size \\n            (\:board\\n              (reduce (fn [gs move]\\n                        (make-move gs (other-player (\:last-play gs \:black)) move))\\n                      game-state\\n                      (shuffle empties))))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Switching to jkb.go.ai.monte-carlo-test namespace" "(clojure.core/in-ns 'jkb.go.ai.monte-carlo-test)" "valueBad" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Switching to jkb.go.ai.monte-carlo-test namespace" "(clojure.core/in-ns 'jkb.go.ai.monte-carlo-test)" "valueGood" "valueBad" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" "(div 4 2)" "(/ 4 3)" "(/ 123 1000)" "valueBad" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" "valueBad" "valueGood" "(count (filter \#(\= \:black %1)\\n               (repeat 100\\n                       (get-winner (rnd-game game-state empties)))))" "(count (filter \#(\= \:white %1)\\n               (repeat 100\\n                       (get-winner (rnd-game game-state empties)))))" "(rnd-game game-state empties)" "(get-winner (rnd-game game-state empties))" "(count (filter \#(\= \:white %1)\\n               (repeat 100\\n                       (get-winner (rnd-game game-state empties)))))" "(rand)" "(repeat 10 (rand))" "(count (filter \#(\= \:white %1)\\n               (repeat 100\\n                       (get-winner (rnd-game game-state empties)))))" "(repeatedly 100 \#(rand-int 10))" "(count (filter \#(\= \:white %1)\\n               (repeatedly 100\\n                           (get-winner (rnd-game game-state empties)))))" "(repeatedly 100\\n            (get-winner (rnd-game game-state empties)))" "(repeatedly 100 \#(rand-int 10))" "(repeatedly 100\\n            (get-winner (rnd-game game-state empties)))" "(repeatedly 100\\n            \#(get-winner (rnd-game game-state empties)))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Switching to jkb.go.ai.monte-carlo-test namespace" "(clojure.core/in-ns 'jkb.go.ai.monte-carlo-test)" "valueBad" "valueGood" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" "(show-bard (\:board game-state))" "(show-board (\:board game-state))" "(show-board 9 (\:board game-state))" "index" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/monte_carlo_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Switching to jkb.go.ai.mc-game-test namespace" "(clojure.core/in-ns 'jkb.go.ai.mc-game-test)" "index" "(show-board 9 (\:board game-state))" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" "(doc time)" "(doc timer)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/eval.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/ai/monte_carlo.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/play/moving.clj" "(doc assoc)" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/src/jkb/go/data/board_util.clj" ";; Loading file /home/joey/workspaces/Clojure/Go/ClojureGo/test/jkb/go/ai/mc_game_test.clj"]
eclipse.preferences.version=1
